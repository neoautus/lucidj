#!/usr/bin/quark-handler
Q-Quark-Version: "1.0.0"
Q-Object: "org.lucidj.runtime.CompositeTask"
Q-Content-Type: "multipart/mixed"; boundary="-------THINK_BIG_BE_BOLD-------"
Formulae-Version: "1.0.0"

-------THINK_BIG_BE_BOLD-------
Q-Object: "org.rationalq.smartbox.SmartBox"
Q-Content-Type: "text/plain"
Long-Value: 31415926535898L
View-Mode: "default"
output0: Embedded; refid=1

for (int i = 0; i < 10; i++)
{
    Console.println ("Hello world! i=" + i);
    Console.flush ();
    Thread.sleep (500);
}

-------THINK_BIG_BE_BOLD-------
Q-Object: "org.lucidj.markdown.Markdown"
Q-Content-Type: "text/plain"
Hide-Editor: true
Html: "<h1>Hello world</h1>\n<h2>Second paragraph</h2>\n<p>Has it ever bothered you that when you set your text large, parenthesis hang below the baseline and sometimes collide with the stroke of an uppercase character? That is because parentheses work best with lowercase characters and not so well will uppercase or numerals in, for example, telephone numbers. Don't worry, CSS2.1 can help you fix that.</p>\n<pre><code class=\"language-javascript\">function fancyAlert(arg) {\n  if(arg) {\n    $.facebox({div:'#foo'})\n  }\n}\n</code></pre>\n<table>\n<thead>\n<tr><th>First Header</th><th>Second Header</th></tr>\n</thead>\n<tbody>\n<tr><td>Content Cell</td><td>Content Cell</td></tr>\n<tr><td>Content Cell</td><td>Content Cell</td></tr>\n</tbody>\n</table>\n<p>Testing <code>find . -name test -print</code> code tag.</p>\n<p>This is another line. And below, the quick brown fox jumped over the lazy dogs with an image.</p>\n<p><img src=\"http://www.bu.edu/math/files/2009/09/equations1.jpg\" alt=\"Image of Math\" /></p>\n<p>Good isn't?</p>\n"; - | &mdash; - |<br/>| Content Cell | Content Cell |<br/>| Content Cell | Content Cell |<br/>Testing <code>find . -name test -print</code> code tag.<br/>This is another line.</p>"; &mdash

# Hello world
## Second paragraph
Has it ever bothered you that when you set your text large, parenthesis hang below the baseline and sometimes collide with the stroke of an uppercase character? That is because parentheses work best with lowercase characters and not so well will uppercase or numerals in, for example, telephone numbers. Don't worry, CSS2.1 can help you fix that.

```javascript
function fancyAlert(arg) {
  if(arg) {
    $.facebox({div:'#foo'})
  }
}
```

| First Header  | Second Header |
| ------------- | ------------- |
| Content Cell  | Content Cell  |
| Content Cell  | Content Cell  |

Testing `find . -name test -print` code tag.

This is another line. And below, the quick brown fox jumped over the lazy dogs with an image.

![Image of Math](http://www.bu.edu/math/files/2009/09/equations1.jpg)

Good isn't?

-------THINK_BIG_BE_BOLD-------
Q-Content-Type: "text/plain"
Q-Object: "org.rationalq.smartbox.SmartBox"
output0: Embedded; refid=2
View-Mode: "default"

trace1 = Plotly.newTrace ()
    .x (new int[] {1, 2, 3, 4})
    .y (new int[] {10, 15, 13, 17})
    .mode ("markers")
    .marker ("rgb(219,64,82)", 12);

trace2 = Plotly.newTrace ()
    .x (new int[] {2, 3, 4, 5})
    .y (new int[] {16, 5, 11, 9})
    .mode ("lines")
    .line ("rgb(55, 128, 191)", 3);

trace3 = Plotly.newTrace ()
    .x (new int[] {1, 2, 3, 4})
    .y (new int[] {12, 9, 15, 12})
    .mode ("lines+markers")
    .line ("rgb(128, 0, 128)", 1)
    .marker ("rgb(219,64,82)", 8);

Plotly.newPlot ()
    .title ("Line and Scatter Styling")
    .addTrace (trace1).addTrace(trace2).addTrace(trace3);

-------THINK_BIG_BE_BOLD-------
Q-Content-Type: "text/plain"
Q-Object: "org.rationalq.smartbox.SmartBox"
View-Mode: "default"

f = b.getClass().getSuperclass().getDeclaredFields();
for (int i = 0; i < f.length; i++)
{
    print("field: " + f[i].getName());
}
cl = b.getClass().getDeclaredClasses();
for (int i = 0; i < cl.length; i++)
{
    print("class " + cl[i].getName());
}
f2 = b.getClass().getSuperclass().getSuperclass().getDeclaredFields();
for (int i = 0; i < f2.length; i++)
{
    print("field: " + f2[i].getName());
}

-------THINK_BIG_BE_BOLD-------
Q-Content-Type: "text/plain"
Q-Object: "org.rationalq.smartbox.SmartBox"
output0: Embedded; refid=3

Plotly.newTrace ()
    .x (new int[] {2, 3, 4, 5})
    .y (new int[] {16, 5, 11, 9})
    .mode ("lines")
    .line ("rgb(55, 128, 191)", 3);

-------THINK_BIG_BE_BOLD-------
Q-Content-Type: "text/plain"
Q-Object: "org.rationalq.smartbox.SmartBox"
output0: Embedded; refid=4

points = 200;
int[] tsx = new int [points];
double[] s = new double [points];
double[] c = new double [points];
r = 3.1415 * 4 / points;
for (int i = 0; i < points; i++)
{
    tsx[i] = i;
    s[i] = sin(i * r);
    c[i] = cos(i * r);
}
st=Plotly.newTrace().y(s);
ct=Plotly.newTrace().y(c);
Plotly.newPlot(st, ct);

-------THINK_BIG_BE_BOLD-------
Q-Content-Type: "text/plain"
Q-Object: "org.rationalq.smartbox.SmartBox"

l = new HorizontalLayout();
l.addComponent(new Label("Testando!"));
l.addComponent(new Button("Botao 1"));
l.addComponent(new Button("Botao 2"));
l

-------THINK_BIG_BE_BOLD-------
Q-Content-Type: "text/plain"
Q-Object: "org.rationalq.smartbox.SmartBox"

for (int i = 0; i < 10; i++)
{
    print ("i = " + i + " sqrt(" + i + ") = " + sqrt(i));
}

-------THINK_BIG_BE_BOLD-------
Q-Object: "org.rationalq.console.Console"; id=1; embedded
Q-Content-Type: "text/plain"

[OUT] Hello world! i=0
[OUT] Hello world! i=1
[OUT] Hello world! i=2[OUT] 
[OUT] Hello world! i=3[OUT] 
[OUT] Hello world! i=4[OUT] 
[OUT] Hello world! i=5
[OUT] Hello world! i=6
[OUT] Hello world! i=7[OUT] 
[OUT] Hello world! i=8
[OUT] Hello world! i=9

-------THINK_BIG_BE_BOLD-------
Q-Object: "org.lucidj.plotly.Plotly"; id=2; embedded
Q-Content-Type: "text/plain"
data2: Embedded; refid=5
data1: Embedded; refid=6
data0: Embedded; refid=7

{
  "title": "Line and Scatter Styling"
}
-------THINK_BIG_BE_BOLD-------
Q-Object: "org.lucidj.plotly.Scatter"; id=3; embedded
Q-Content-Type: "text/plain"

{
  "type": "scatter",
  "x": [
    2,
    3,
    4,
    5
  ],
  "y": [
    16,
    5,
    11,
    9
  ],
  "mode": "lines",
  "line": {
    "color": "rgb(55, 128, 191)",
    "width": 3
  }
}
-------THINK_BIG_BE_BOLD-------
Q-Object: "org.lucidj.plotly.Plotly"; id=4; embedded
Q-Content-Type: "text/plain"
data1: Embedded; refid=8
data0: Embedded; refid=9

{}
-------THINK_BIG_BE_BOLD-------
Q-Object: "org.lucidj.plotly.Scatter"; id=5; embedded
Q-Content-Type: "text/plain"

{
  "type": "scatter",
  "x": [
    1,
    2,
    3,
    4
  ],
  "y": [
    12,
    9,
    15,
    12
  ],
  "mode": "lines+markers",
  "line": {
    "color": "rgb(128, 0, 128)",
    "width": 1
  },
  "marker": {
    "color": "rgb(219,64,82)",
    "size": 8
  }
}
-------THINK_BIG_BE_BOLD-------
Q-Object: "org.lucidj.plotly.Scatter"; id=6; embedded
Q-Content-Type: "text/plain"

{
  "type": "scatter",
  "x": [
    2,
    3,
    4,
    5
  ],
  "y": [
    16,
    5,
    11,
    9
  ],
  "mode": "lines",
  "line": {
    "color": "rgb(55, 128, 191)",
    "width": 3
  }
}
-------THINK_BIG_BE_BOLD-------
Q-Object: "org.lucidj.plotly.Scatter"; id=7; embedded
Q-Content-Type: "text/plain"

{
  "type": "scatter",
  "x": [
    1,
    2,
    3,
    4
  ],
  "y": [
    10,
    15,
    13,
    17
  ],
  "mode": "markers",
  "marker": {
    "color": "rgb(219,64,82)",
    "size": 12
  }
}
-------THINK_BIG_BE_BOLD-------
Q-Object: "org.lucidj.plotly.Scatter"; id=8; embedded
Q-Content-Type: "text/plain"

{
  "type": "scatter",
  "y": [
    1.0,
    0.9980268447818988,
    0.9921151658106246,
    0.9822882924065973,
    0.9685850044628864,
    0.9510593794077146,
    0.9297805787981377,
    0.9048325753870716,
    0.8763138217407395,
    0.8443368617142836,
    0.8090278863187741,
    0.7705262357323062,
    0.7289838494204001,
    0.6845646665357032,
    0.6374439789632012,
    0.5878077395640221,
    0.5358518283477212,
    0.48178127946895344,
    0.42580947209905046,
    0.368157288365569,
    0.3090522416828467,
    0.24872757891343958,
    0.18742135990359482,
    0.12537551802519548,
    0.06283490543156903,
    4.63267948801798E-5,
    -0.06274243466172277,
    -0.12528359499362765,
    -0.187330347367124,
    -0.24863783603578804,
    -0.30896412261726947,
    -0.36807114085725406,
    -0.4257256361128088,
    -0.48170008584761254,
    -0.5357735975065163,
    -0.5877327802261385,
    -0.6373725869414559,
    -0.6844971235651773,
    -0.7289204220466226,
    -0.7704671742593843,
    -0.8089734238216146,
    -0.8442872131188075,
    -0.8762691829757173,
    -0.9047931226109276,
    -0.9297464677037743,
    -0.9510307446080992,
    -0.9685619589598278,
    -0.9822709271448046,
    -0.9921035493188115,
    -0.9980210229023483,
    -0.9999999957076562,
    -0.9980326580937006,
    -0.9921267737854389,
    -0.9823056492357519,
    -0.9686080416509454,
    -0.9510880060427821,
    -0.9298146819106253,
    -0.9048720203955104,
    -0.8763584529828812,
    -0.8443865030613914,
    -0.8090823418706817,
    -0.770585290590501,
    -0.7290472705360789,
    -0.6846322036294554,
    -0.6375153655126887,
    -0.58788269385576,
    -0.5359300545888054,
    -0.48186246895435253,
    -0.42589330442985085,
    -0.36824343271336896,
    -0.30914035809530727,
    -0.24881731965584275,
    -0.18751237083111247,
    -0.12546743998045343,
    -0.06292737566199678,
    -1.3898038424239425E-4,
    0.06264996335325276,
    0.1251916708865393,
    0.18723933322248065,
    0.24854809102365855,
    0.3088760008993316,
    0.36798499018916314,
    0.4256417964718454,
    0.4816188880910269,
    0.5356953620658625,
    0.5876578158427525,
    0.6373011894480661,
    0.6844295747184568,
    0.728856988415291,
    0.7704081061722423,
    0.8089189543796712,
    0.8442375572753896,
    0.8762245366881982,
    0.9047536620674175,
    0.9297123486278278,
    0.9510021016441819,
    0.968538905141967,
    0.9822535534505226,
    0.9920919243100993,
    0.9980151924550991,
    0.9999999828306246,
    0.9980384628377036,
    0.9921383732431547,
    0.9823229976321194,
    0.9686310705238069,
    0.9511166245130561,
    0.9298487770409442,
    0.9049114576359054,
    0.876403076701759,
    0.8444361371597046,
    0.8091367904768703,
    0.7706443388334618,
    0.7291106853931146,
    0.684699734845854,
    0.637586746589306,
    0.5879576431007084,
    0.5360082762290975,
    0.4819436543031128,
    0.42597713310449026,
    0.36832957389991383,
    0.3092284718538934,
    0.24890705826222587,
    0.18760338014889366,
    0.12555936085861302,
    0.06301984535221314,
    2.316339724119496E-4,
    -0.06255749150695195,
    -0.1250997457047193,
    -0.18714831747044586,
    -0.2484583438778211,
    -0.30878787652978973,
    -0.367898836362036,
    -0.42555795317688017,
    -0.4815376861998934,
    -0.5356171220264313,
    -0.5875828464145075,
    -0.6372297864836447,
    -0.6843620199961226,
    -0.728793548526949,
    -0.7703490314713867,
    -0.8088644779934103,
    -0.8441878941844553,
    -0.8761798828785643,
    -0.9047141937568791,
    -0.9296782215705908,
    -0.9509734505162087,
    -0.9685158430095027,
    -0.9822361713239007,
    -0.9920802907845878,
    -0.998009353440201,
    -0.9999999613689056,
    -0.9980442590138581,
    -0.9921499641836722,
    -0.9823403375955505,
    -0.9686540910812729,
    -0.951145234818291,
    -0.9298828641888017,
    -0.9049508871079183,
    -0.8764476928969903,
    -0.8444857640087974,
    -0.8091912321368722,
    -0.7707033804606818,
    -0.729174093990963,
    -0.6847672601843192,
    -0.6376581221924402,
    -0.5880325872982242,
    -0.5360864932679259,
    -0.48202483551453734,
    -0.426060958122249,
    -0.3684157119244644,
    -0.30931658295785136,
    -0.24899679473182135,
    -0.18769438785616016,
    -0.1256512806588856,
    -0.06311231450142467,
    -3.242875585938878E-4,
    0.062465019123615476,
    0.12500781944895795,
    0.1870573001118021,
    0.24836859459904723,
    0.30869974950940116,
    0.3678126793766131,
    0.4254741062286336,
    0.4814564801749101,
    0.535538877388895,
    0.5875078719420481,
    0.6371583780488053,
    0.6842944593987547,
    0.7287301023821432,
    0.7702899501573263,
    0.8088099946633016,
    0.8441382238464324,
    0.8761352215472007,
    0.9046747176796528,
    0.9296440865323571,
    0.950944791224425,
    0.9684927725626317,
    0.9822187807650878,
    0.9920686487423768,
    0.9980035058577044
  ]
}
-------THINK_BIG_BE_BOLD-------
Q-Object: "org.lucidj.plotly.Scatter"; id=9; embedded
Q-Content-Type: "text/plain"

{
  "type": "scatter",
  "y": [
    0.0,
    0.0627886701140236,
    0.12532955664390094,
    0.18737585383642985,
    0.24868270774147175,
    0.30900818248165035,
    0.3681142150064297,
    0.42576755456281473,
    0.48174068317523216,
    0.5358127135020918,
    0.5877702605258084,
    0.6374082836363225,
    0.6845308957850007,
    0.7289521365157395,
    0.7704967058226544,
    0.8090006559383217,
    0.844312038322565,
    0.8762915032985645,
    0.9048128499699415,
    0.9297635242486723,
    0.9510450630284599,
    0.9685734827507196,
    0.9822796108297714,
    0.9921093586293367,
    0.998023934913089,
    0.999999998926914,
    0.9980297525087714,
    0.9921209708626628,
    0.9822969718752638,
    0.9685965240963033,
    0.9510736937458322,
    0.9297976313521343,
    0.9048522988622753,
    0.8763361383021944,
    0.8443616832939101,
    0.8090551149629138,
    0.7705557639882763,
    0.7290155607605358,
    0.6845984358172122,
    0.6374796729220154,
    0.5878452173406995,
    0.5358909420433203,
    0.48182187472868926,
    0.4258513887214258,
    0.3682003609345793,
    0.30909630022076356,
    0.24877244955159505,
    0.1874668655685215,
    0.1254214791374127,
    0.06288114061425999,
    9.265358966093435E-5,
    -0.06269619907476597,
    -0.1252376330744739,
    -0.18728484049577515,
    -0.24859296379648502,
    -0.30892006208979833,
    -0.36802806591813436,
    -0.4256837167491223,
    -0.48165948748618176,
    -0.5357344803610785,
    -0.5876952986650934,
    -0.6373368888786787,
    -0.6844633498763052,
    -0.728888706013117,
    -0.770437641042559,
    -0.8089461899687116,
    -0.8442623861030646,
    -0.8762468607722459,
    -0.9047733933100721,
    -0.9297294091634805,
    -0.9510164241466628,
    -0.9685504330902353,
    -0.9822622413517152,
    -0.9920977378790616,
    -0.9980181087496829,
    -0.9999999903422263,
    -0.9980355615366799,
    -0.9921325745789402,
    -0.9823143244880433,
    -0.9686195571267882,
    -0.9511023162985337,
    -0.9298317304735741,
    -0.9048917399867347,
    -0.876380765782752,
    -0.844411321016674,
    -0.8091095670420204,
    -0.7706148155389176,
    -0.7290789787469615,
    -0.6846659699723597,
    -0.6375510567351441,
    -0.5879201691091227,
    -0.535969165984092,
    -0.4819030621458557,
    -0.4259352192242353,
    -0.36828650370184407,
    -0.3091844153063818,
    -0.24886218922608483,
    -0.18755787569126878,
    -0.12551340055422033,
    -0.0629736105746815,
    -1.8530717852646654E-4,
    0.06260372749728109,
    0.12514570842992095,
    0.18719382554733788,
    0.2485032177174047,
    0.3088319390459643,
    0.36794191367043333,
    0.4255998752810684,
    0.4815782876622354,
    0.5356562426209525,
    0.5876203317591975,
    0.6372654886496965,
    0.6843957980917055,
    0.7288252692532122,
    0.7703785696484969,
    0.8088917170545511,
    0.8442127266358352,
    0.8762022107236216,
    0.9047339288830056,
    0.9296952860968523,
    0.9509877771006869,
    0.968527375115048,
    0.9822448634412448,
    0.9920861086119372,
    0.998012274018603,
    0.999999973172851,
    0.998041361996765,
    0.9921441697780694,
    0.9823316686679613,
    0.9686425818419766,
    0.951130930686319,
    0.929865821612699,
    0.904931173342981,
    0.8764253857398546,
    0.8444609514904304,
    0.8091640121751741,
    0.7706738604740715,
    0.7291423904744716,
    0.6847334982498648,
    0.6376224350750972,
    0.587995115830436,
    0.536047385323737,
    0.48198424542603596,
    0.42601904607052504,
    0.36837264330748504,
    0.30927252773774755,
    0.24895192676416955,
    0.18764888420388942,
    0.12560532089353374,
    0.06306607999449333,
    2.779607658003063E-4,
    -0.06251125538236366,
    -0.1250537827110321,
    -0.18710280899190138,
    -0.24841346950500315,
    -0.3087438133509041,
    -0.3678557582640654,
    -0.42551603015937217,
    -0.4814970837040895,
    -0.5355780002823844,
    -0.5875453598087645,
    -0.637194082949989,
    -0.6843282404317816,
    -0.7287618262365702,
    -0.7703194916409755,
    -0.8088372371963078,
    -0.8441630599213034,
    -0.8761575531530749,
    -0.9046944566890809,
    -0.9296611550490803,
    -0.9509591218907775,
    -0.9685043088253553,
    -0.9822274770985087,
    -0.9920744708280633,
    -0.9980064307198994,
    -0.9999999474187883,
    -0.9980471538889765,
    -0.9921557564599506,
    -0.9823490044148684,
    -0.9686655982416709,
    -0.951159536908942,
    -0.9298999047692159,
    -0.9049705989306754,
    -0.8764699981731185,
    -0.8445105747147528,
    -0.8092184503619069,
    -0.7707328987932303,
    -0.7292057959425213,
    -0.6848010206491453,
    -0.6376938079412594,
    -0.5880700575039933,
    -0.536125600061581,
    -0.48206542456853047,
    -0.4261028692595728,
    -0.3684587797507603,
    -0.3093606375141069,
    -0.24904166216508147,
    -0.1877398911056047,
    -0.12569724015456643,
    -0.06315854887290434
  ]
}
-------THINK_BIG_BE_BOLD---------
